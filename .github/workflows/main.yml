name: Build, test, and release

on:
  push:
    branches: '*'
  workflow_dispatch:

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3

  #     - name: Run tests
  #       run: cargo test

  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: i686-unknown-linux-gnu
            runner: ubuntu-latest
            cross: true

          - target: i686-pc-windows-gnu
            runner: ubuntu-latest
            cross: true

          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest
            cross: true

          - target: aarch64-apple-darwin
            runner: macos-12
            channel: nightly

          - target: x86_64-apple-darwin
            runner: macos-12
            channel: stable

          # https://github.com/cross-rs/cross-toolchains#apple-targets
          # - x86_64-apple-darwin
          # - aarch64-apple-darwin

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install toolchain
        if: ${{ matrix.channel }}
        run: rustup toolchain install ${{ matrix.channel }} -t ${{ matrix.target }}

      - name: Add target
        if: ${{ matrix.channel }}
        run: rustup target add ${{ matrix.target }}

      - name: Build release executable (direct)
        run: cargo build --target ${{ matrix.target }} --release

      - name: Install cross
        if: ${{ matrix.cross }}
        run: cargo install -f cross

      - name: Build release executable (cross)
        if: ${{ matrix.cross }}
        run: cross build --target ${{ matrix.target }} --release

      - name: Build release package
        run: |
          export SUFFIX=$(echo '${{ matrix.target }}' |grep -q '\-windows-' && echo '.exe')
          export ARCH=$(echo '${{ matrix.target }}' |cut -d - -f 1)
          export OS=$(echo '${{ matrix.target }}' |cut -d - -f 3)
          export RELEASE=portr-${OS}-${ARCH}-r${{ github.run_number }}
          export BIN=target/${{ matrix.target }}/release/portr${SUFFIX}
          ls -l $BIN || exit 1
          mkdir $RELEASE || exit 1
          cp $BIN $RELEASE/ || exit 1
          cp LICENSE README.md portr.toml.example $RELEASE/ || exit 1
          ls -l $RELEASE/* || exit 1
          zip -r ${RELEASE}.zip $RELEASE/ || exit 1

      - name: List packages
        run: ls -lh *.zip

      # - name: Upload package artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: zips
      #     path: portr-*.zip

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         path: dist

  #     - name: List artifacts
  #       run: find dist -type f

  #     - name: upload artifact
  #       if: github.ref == 'refs/heads/main'
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         name: r${{ github.run_number }}
  #         files: dist/zips/portr-*.zip
  #         fail_on_unmatched_files: yes
  #         draft: no
  #         prerelease: no
  #         tag_name: r${{ github.run_number }}
