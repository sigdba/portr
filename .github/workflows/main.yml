name: Build, test, and release

on:
  push:
    branches: '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - i686-unknown-linux-gnu
          - i686-pc-windows-gnu
          - aarch64-unknown-linux-gnu

          # https://github.com/cross-rs/cross-toolchains#apple-targets
          # - x86_64-apple-darwin
          # - aarch64-apple-darwin

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install rustup
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install cross
        run: cargo install -f cross

      - name: Run tests
        run: cross test

      - name: Build release executable
        run: cross build --target ${{ matrix.target }} --release

      # - name: Build debug executable
      #   run: cross build --target ${{ matrix.target }}

      - name: Build release package
        run: |
          export SUFFIX=$(echo '${{ matrix.target }}' |grep -q '\-windows-' && echo '.exe')
          export ARCH=$(echo '${{ matrix.target }}' |cut -d - -f 1)
          export OS=$(echo '${{ matrix.target }}' |cut -d - -f 3)
          export RELEASE=${OS}-${ARCH}-r${{ github.run_number }}
          export BIN=target/${{ matrix.target }}/release/portr${SUFFIX}
          ls -l $BIN || exit 1
          mkdir $RELEASE || exit 1
          cp $BIN $RELEASE/ || exit 1
          cp LICENSE README.md portr.toml.example $RELEASE/ || exit 1
          ls -l $RELEASE/* || exit 1
          zip ${RELEASE}.zip $RELEASE/ || exit 1

      - name: List executables
        run: find target -name "portr$(echo '${{ matrix.target }}' |grep -q '\-windows-' && echo '.exe')"
